import React, { useState } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import * as Yup from 'yup';
import { FiCalendar, FiClock } from 'react-icons/fi';
import { Banner } from '../components/Banner';
import { Card } from '../components/Card';
import { Header } from '../components/Header';
import { Jumbotron } from '../components/Jumbotron';
import { Search } from '../components/Search';
import { SubTitle } from '../components/Subtitle/index';
import { useFormik } from 'formik';
import { FormItem } from '../components/FormItem';
import { Button } from '../components/Button';
import { MenuMobile } from '../components/MenuMobile';
import { Auth, setToken } from '../services/auth';
import { useRouter } from 'next/router';

const Home: NextPage = () => {
  const router = useRouter();
  const [isLoading, setLoading] = useState<boolean>(false);
  const formik = useFormik({
    initialValues: {
      username: '',
      password: '',
    },
    validationSchema: Yup.object().shape({
      username: Yup.string().email('Email inválido').required('Insira seu email'),
      password: Yup.string().required('Cadastre uma senha'),
    }),
    onSubmit: (values, { setFieldValue, setTouched }) => {
      setLoading(true);
      try {
        Auth.login({
          username: values.username,
          password: values.password
        })
          .then((res) => {
            if (res.status === 200) {
              setToken(res.data.token);
              setLoading(false);
              router.push(`/${res.data.id}`);
            }
          })
          .catch((error) => {
            console.log('Erro ao fazer login');
          })
          .finally(() => {
            setLoading(false);
          });
      } catch {
        console.log('Falha ao fazer login');
      }
    },
  });

  return (
    <div>
      <Head>
        <title>Dr. Consulta</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <Jumbotron
        image="/images/doctor-with-mask.png"
        title="Prevenção á COVID-19"
        description="Saiba quais os cuidados basicos"
      />
      <div className="mx-4 my-6 sm:mx-0 sm:px-36 sm:my-16">
        <Search />
      </div>

      <div className="px-5 sm:px-36">
        <SubTitle text="Próximas Consultas" />
        <div className="flex justify-between my-3 sm:my-8">
          <Card text="Ortopedista 25/05 15:00" Icon={FiClock} />
          <Card text="Agendar uma consulta" Icon={FiCalendar} />
        </div>
      </div>

      <div className="flex flex-col px-5 sm:flex-row sm:px-36">
        <section id="blog" className="w-full sm:w-3/5">
          <SubTitle text="blog" />
          <div className="flex flex-wrap justify-between gap-5 my-3 sm:gap-10 sm:my-8">
            <Banner text="Médicos" image="/images/banner.png" />
            <Banner text="Covid-19" image="/images/banner2.png" />
            <Banner text="Covid-19" image="/images/banner2.png" />
            <Banner text="Médicos" image="/images/banner.png" />
          </div>
        </section>
        <section
          id="login"
          className="flex flex-col justify-between w-full mb-20 sm:ml-10 sm:w-2/5 h-96"
        >
          <SubTitle text="login" />

          <FormItem
            title="Email"
            field="username"
            errors={formik.errors.username}
            setFieldValue={formik.setFieldValue}
            value={formik.values.username}
            touched={formik.touched.username}
          />
          <FormItem
            type="password"
            title="Senha"
            field="password"
            errors={formik.errors.password}
            setFieldValue={formik.setFieldValue}
            value={formik.values.password}
            touched={formik.touched.password}
          />

          <Button text="Entrar" handleSubmit={() => {formik.handleSubmit()}} theme="success" />
        </section>
      </div>
      <MenuMobile />
    </div>
  );
};

export default Home;
